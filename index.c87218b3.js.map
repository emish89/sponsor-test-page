{"mappings":"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","sources":["src/data.ts","src/util.ts","src/selectorsUtil.ts","src/tableUtil.ts","src/main.ts"],"sourcesContent":["export const defaultSelectedCountries = [\n  'CN',\n  'CY',\n  'DE',\n  'EE',\n  'ES',\n  'FR',\n  'GB',\n  'IL',\n  'IS',\n  'IT',\n  'KZ',\n  'LT',\n  'LV',\n  'MC',\n  'MD',\n  'MO',\n  'NO',\n  'RU',\n  'SE',\n  'TR',\n  'UA',\n];\nexport const countryCodes = [\n  { isoCode: 'AD', name: 'Andorra', fifaCode: 'AND' },\n  { isoCode: 'AE', name: 'United Arab Emirates', fifaCode: 'UAE' },\n  { isoCode: 'AF', name: 'Afghanistan', fifaCode: 'AFG' },\n  { isoCode: 'AG', name: 'Antigua and Barbuda', fifaCode: 'ATG' },\n  { isoCode: 'AI', name: 'Anguilla', fifaCode: 'AIA' },\n  { isoCode: 'AL', name: 'Albania', fifaCode: 'ALB' },\n  { isoCode: 'AM', name: 'Armenia', fifaCode: 'ARM' },\n  { isoCode: 'AO', name: 'Angola', fifaCode: 'ANG' },\n  { isoCode: 'AQ', name: 'Antarctica', fifaCode: 'ATA' },\n  { isoCode: 'AR', name: 'Argentina', fifaCode: 'ARG' },\n  { isoCode: 'AS', name: 'American Samoa', fifaCode: 'ASA' },\n  { isoCode: 'AT', name: 'Austria', fifaCode: 'AUT' },\n  { isoCode: 'AU', name: 'Australia', fifaCode: 'AUS' },\n  { isoCode: 'AW', name: 'Aruba', fifaCode: 'ARU' },\n  { isoCode: 'AZ', name: 'Azerbaijan', fifaCode: 'AZE' },\n  { isoCode: 'BA', name: 'Bosnia and Herzegovina', fifaCode: 'BIH' },\n  { isoCode: 'BB', name: 'Barbados', fifaCode: 'BRB' },\n  { isoCode: 'BD', name: 'Bangladesh', fifaCode: 'BAN' },\n  { isoCode: 'BE', name: 'Belgium', fifaCode: 'BEL' },\n  { isoCode: 'BF', name: 'Burkina Faso', fifaCode: 'BFA' },\n  { isoCode: 'BG', name: 'Bulgaria', fifaCode: 'BUL' },\n  { isoCode: 'BH', name: 'Bahrain', fifaCode: 'BHR' },\n  { isoCode: 'BI', name: 'Burundi', fifaCode: 'BDI' },\n  { isoCode: 'BJ', name: 'Benin', fifaCode: 'BEN' },\n  { isoCode: 'BL', name: 'Saint Barthelemy', fifaCode: 'BLM' },\n  { isoCode: 'BM', name: 'Bermuda', fifaCode: 'BER' },\n  { isoCode: 'BN', name: 'Brunei Darussalam', fifaCode: 'BRU' },\n  { isoCode: 'BO', name: 'Bolivia', fifaCode: 'BOL' },\n  { isoCode: 'BQ', name: 'Bonaire, Saint Eustatius and Saba', fifaCode: 'BES' },\n  { isoCode: 'BR', name: 'Brazil', fifaCode: 'BRA' },\n  { isoCode: 'BS', name: 'Bahamas', fifaCode: 'BAH' },\n  { isoCode: 'BT', name: 'Bhutan', fifaCode: 'BHU' },\n  { isoCode: 'BV', name: 'Bouvet Island', fifaCode: 'BVT' },\n  { isoCode: 'BW', name: 'Botswana', fifaCode: 'BOT' },\n  { isoCode: 'BY', name: 'Belarus', fifaCode: 'BLR' },\n  { isoCode: 'BZ', name: 'Belize', fifaCode: 'BLZ' },\n  { isoCode: 'CA', name: 'Canada', fifaCode: 'CAN' },\n  { isoCode: 'CC', name: 'Cocos (Keeling) Islands', fifaCode: 'CCK' },\n  { isoCode: 'CD', name: 'Congo, Democratic Republic of the', fifaCode: 'COD' },\n  { isoCode: 'CF', name: 'Central African Republic', fifaCode: 'CTA' },\n  { isoCode: 'CG', name: 'Congo', fifaCode: 'CGO' },\n  { isoCode: 'CH', name: 'Switzerland', fifaCode: 'SUI' },\n  { isoCode: 'CI', name: \"Cote d'Ivoire\", fifaCode: 'CIV' },\n  { isoCode: 'CK', name: 'Cook Islands', fifaCode: 'COK' },\n  { isoCode: 'CL', name: 'Chile', fifaCode: 'CHI' },\n  { isoCode: 'CM', name: 'Cameroon', fifaCode: 'CMR' },\n  { isoCode: 'CN', name: 'China', fifaCode: 'CHN' },\n  { isoCode: 'CO', name: 'Colombia', fifaCode: 'COL' },\n  { isoCode: 'CR', name: 'Costa Rica', fifaCode: 'CRC' },\n  { isoCode: 'CU', name: 'Cuba', fifaCode: 'CUB' },\n  { isoCode: 'CV', name: 'Cape Verde', fifaCode: 'CPV' },\n  { isoCode: 'CW', name: 'Curacao', fifaCode: 'CUW' },\n  { isoCode: 'CX', name: 'Christmas Island', fifaCode: 'CXR' },\n  { isoCode: 'CY', name: 'Cyprus', fifaCode: 'CYP' },\n  { isoCode: 'CZ', name: 'Czech Republic', fifaCode: 'CZE' },\n  { isoCode: 'DE', name: 'Germany', fifaCode: 'GER' },\n  { isoCode: 'DJ', name: 'Djibouti', fifaCode: 'DJI' },\n  { isoCode: 'DK', name: 'Denmark', fifaCode: 'DEN' },\n  { isoCode: 'DM', name: 'Dominica', fifaCode: 'DMA' },\n  { isoCode: 'DO', name: 'Dominican Republic', fifaCode: 'DOM' },\n  { isoCode: 'DZ', name: 'Algeria', fifaCode: 'ALG' },\n  { isoCode: 'EC', name: 'Ecuador', fifaCode: 'ECU' },\n  { isoCode: 'EE', name: 'Estonia', fifaCode: 'EST' },\n  { isoCode: 'EG', name: 'Egypt', fifaCode: 'EGY' },\n  { isoCode: 'EH', name: 'Western Sahara', fifaCode: 'ESH' },\n  { isoCode: 'ER', name: 'Eritrea', fifaCode: 'ERI' },\n  { isoCode: 'ES', name: 'Spain', fifaCode: 'ESP' },\n  { isoCode: 'ET', name: 'Ethiopia', fifaCode: 'ETH' },\n  { isoCode: 'FI', name: 'Finland', fifaCode: 'FIN' },\n  { isoCode: 'FJ', name: 'Fiji', fifaCode: 'FIJ' },\n  { isoCode: 'FK', name: 'Falkland Islands (Malvinas)', fifaCode: 'FLK' },\n  { isoCode: 'FM', name: 'Micronesia, Federated States of', fifaCode: 'FSM' },\n  { isoCode: 'FO', name: 'Faroe Islands', fifaCode: 'FRO' },\n  { isoCode: 'FR', name: 'France', fifaCode: 'FRA' },\n  { isoCode: 'GA', name: 'Gabon', fifaCode: 'GAB' },\n  { isoCode: 'GB', name: 'United Kingdom', fifaCode: 'GBR' },\n  { isoCode: 'GD', name: 'Grenada', fifaCode: 'GRN' },\n  { isoCode: 'GE', name: 'Georgia', fifaCode: 'GEO' },\n  { isoCode: 'GF', name: 'French Guiana', fifaCode: 'GUF' },\n  { isoCode: 'GH', name: 'Ghana', fifaCode: 'GHA' },\n  { isoCode: 'GI', name: 'Gibraltar', fifaCode: 'GIB' },\n  { isoCode: 'GG', name: 'Guernsey', fifaCode: 'GGY' },\n  { isoCode: 'GL', name: 'Greenland', fifaCode: 'GRL' },\n  { isoCode: 'GM', name: 'Gambia', fifaCode: 'GAM' },\n  { isoCode: 'GN', name: 'Guinea', fifaCode: 'GUI' },\n  { isoCode: 'GP', name: 'Guadeloupe', fifaCode: 'GLP' },\n  { isoCode: 'GQ', name: 'Equatorial Guinea', fifaCode: 'EQG' },\n  { isoCode: 'GR', name: 'Greece', fifaCode: 'GRE' },\n  { isoCode: 'GS', name: 'South Georgia/South Sandwich Isl.', fifaCode: 'SGS' },\n  { isoCode: 'GT', name: 'Guatemala', fifaCode: 'GUA' },\n  { isoCode: 'GU', name: 'Guam', fifaCode: 'GUM' },\n  { isoCode: 'GW', name: 'Guinea-Bissau', fifaCode: 'GNB' },\n  { isoCode: 'GY', name: 'Guyana', fifaCode: 'GUY' },\n  { isoCode: 'HK', name: 'Hong Kong', fifaCode: 'HKG' },\n  { isoCode: 'HM', name: 'Heard Island and Mcdonald Islands', fifaCode: 'HMD' },\n  { isoCode: 'HN', name: 'Honduras', fifaCode: 'HUN' },\n  { isoCode: 'HR', name: 'Croatia', fifaCode: 'CRO' },\n  { isoCode: 'HT', name: 'Haiti', fifaCode: 'HAI' },\n  { isoCode: 'HU', name: 'Hungary', fifaCode: 'HUN' },\n  { isoCode: 'ID', name: 'Indonesia', fifaCode: 'IDN' },\n  { isoCode: 'IE', name: 'Ireland', fifaCode: 'IRL' },\n  { isoCode: 'IL', name: 'Israel', fifaCode: 'ISR' },\n  { isoCode: 'IM', name: 'Isle of Man', fifaCode: 'IMN' },\n  { isoCode: 'IN', name: 'India', fifaCode: 'IND' },\n  { isoCode: 'IO', name: 'British Indian Ocean Territory', fifaCode: 'IOT' },\n  { isoCode: 'IQ', name: 'Iraq', fifaCode: 'IRQ' },\n  { isoCode: 'IR', name: 'Iran', fifaCode: 'IRN' },\n  { isoCode: 'IS', name: 'Iceland', fifaCode: 'ISL' },\n  { isoCode: 'IT', name: 'Italy', fifaCode: 'ITA' },\n  { isoCode: 'JE', name: 'Jersey', fifaCode: 'JEY' },\n  { isoCode: 'JM', name: 'Jamaica', fifaCode: 'JAM' },\n  { isoCode: 'JO', name: 'Jordan', fifaCode: 'JOR' },\n  { isoCode: 'JP', name: 'Japan', fifaCode: 'JPN' },\n  { isoCode: 'KE', name: 'Kenya', fifaCode: 'KEN' },\n  { isoCode: 'KG', name: 'Kyrgyzstan', fifaCode: 'KGZ' },\n  { isoCode: 'KH', name: 'Cambodia', fifaCode: 'CAM' },\n  { isoCode: 'KI', name: 'Kiribati', fifaCode: 'KIR' },\n  { isoCode: 'KM', name: 'Comoros', fifaCode: 'COM' },\n  { isoCode: 'KN', name: 'Saint Kitts and Nevis', fifaCode: 'SKN' },\n  { isoCode: 'KP', name: 'North Korea', fifaCode: 'PRK' },\n  { isoCode: 'KR', name: 'South Korea', fifaCode: 'KOR' },\n  { isoCode: 'KW', name: 'Kuwait', fifaCode: 'KUW' },\n  { isoCode: 'KY', name: 'Cayman Islands', fifaCode: 'CAY' },\n  { isoCode: 'KZ', name: 'Kazakhstan', fifaCode: 'KAZ' },\n  { isoCode: 'LA', name: 'Laos', fifaCode: 'LAO' },\n  { isoCode: 'LB', name: 'Lebanon', fifaCode: 'LIB' },\n  { isoCode: 'LC', name: 'Saint Lucia', fifaCode: 'LCA' },\n  { isoCode: 'LI', name: 'Liechtenstein', fifaCode: 'LIE' },\n  { isoCode: 'LK', name: 'Sri Lanka', fifaCode: 'SRI' },\n  { isoCode: 'LR', name: 'Liberia', fifaCode: 'LBR' },\n  { isoCode: 'LS', name: 'Lesotho', fifaCode: 'LES' },\n  { isoCode: 'LT', name: 'Lithuania', fifaCode: 'LTU' },\n  { isoCode: 'LU', name: 'Luxembourg', fifaCode: 'LUX' },\n  { isoCode: 'LV', name: 'Latvia', fifaCode: 'LVA' },\n  { isoCode: 'LY', name: 'Libyan Arab Jamahiriya', fifaCode: 'LBY' },\n  { isoCode: 'MA', name: 'Morocco', fifaCode: 'MAR' },\n  { isoCode: 'MC', name: 'Monaco', fifaCode: 'MCO' },\n  { isoCode: 'MD', name: 'Moldova', fifaCode: 'MDA' },\n  { isoCode: 'ME', name: 'Montenegro', fifaCode: 'MNE' },\n  { isoCode: 'MG', name: 'Madagascar', fifaCode: 'MAD' },\n  { isoCode: 'MH', name: 'Marshall Islands', fifaCode: 'MHL' },\n  { isoCode: 'MK', name: 'Macedonia', fifaCode: 'MKD' },\n  { isoCode: 'ML', name: 'Mali', fifaCode: 'MLI' },\n  { isoCode: 'MM', name: 'Myanmar', fifaCode: 'MYA' },\n  { isoCode: 'MN', name: 'Mongolia', fifaCode: 'MGL' },\n  { isoCode: 'MO', name: 'Macau', fifaCode: 'MAC' },\n  { isoCode: 'MP', name: 'Northern Mariana Islands', fifaCode: 'MNP' },\n  { isoCode: 'MQ', name: 'Martinique', fifaCode: 'MTQ' },\n  { isoCode: 'MR', name: 'Mauritania', fifaCode: 'MTN' },\n  { isoCode: 'MS', name: 'Montserrat', fifaCode: 'MSR' },\n  { isoCode: 'MT', name: 'Malta', fifaCode: 'MLT' },\n  { isoCode: 'MU', name: 'Mauritius', fifaCode: 'MRI' },\n  { isoCode: 'MV', name: 'Maldives', fifaCode: 'MDV' },\n  { isoCode: 'MW', name: 'Malawi', fifaCode: 'MWI' },\n  { isoCode: 'MX', name: 'Mexico', fifaCode: 'MEX' },\n  { isoCode: 'MY', name: 'Malaysia', fifaCode: 'MAS' },\n  { isoCode: 'MZ', name: 'Mozambique', fifaCode: 'MOZ' },\n  { isoCode: 'NA', name: 'Namibia', fifaCode: 'NAM' },\n  { isoCode: 'NC', name: 'New Caledonia', fifaCode: 'NCL' },\n  { isoCode: 'NE', name: 'Niger', fifaCode: 'NIG' },\n  { isoCode: 'NF', name: 'Norfolk Island', fifaCode: 'NFK' },\n  { isoCode: 'NG', name: 'Nigeria', fifaCode: 'NGA' },\n  { isoCode: 'NI', name: 'Nicaragua', fifaCode: 'NCA' },\n  { isoCode: 'NL', name: 'Netherlands', fifaCode: 'NED' },\n  { isoCode: 'NO', name: 'Norway', fifaCode: 'NOR' },\n  { isoCode: 'NP', name: 'Nepal', fifaCode: 'NEP' },\n  { isoCode: 'NR', name: 'Nauru', fifaCode: 'NIR' },\n  { isoCode: 'NU', name: 'Niue', fifaCode: 'NIU' },\n  { isoCode: 'NZ', name: 'New Zealand', fifaCode: 'NZL' },\n  { isoCode: 'OM', name: 'Oman', fifaCode: 'OMA' },\n  { isoCode: 'PA', name: 'Panama', fifaCode: 'PAN' },\n  { isoCode: 'PE', name: 'Peru', fifaCode: 'PER' },\n  { isoCode: 'PF', name: 'French Polynesia', fifaCode: 'PYF' },\n  { isoCode: 'PG', name: 'Papua New Guinea', fifaCode: 'PNG' },\n  { isoCode: 'PH', name: 'Philippines', fifaCode: 'PHI' },\n  { isoCode: 'PK', name: 'Pakistan', fifaCode: 'PAK' },\n  { isoCode: 'PL', name: 'Poland', fifaCode: 'POL' },\n  { isoCode: 'PM', name: 'Saint Pierre and Miquelon', fifaCode: 'SPM' },\n  { isoCode: 'PN', name: 'Pitcairn', fifaCode: 'SPM' },\n  { isoCode: 'PR', name: 'Puerto Rico', fifaCode: 'PUR' },\n  { isoCode: 'PS', name: 'Palestinian Territory, Occupied', fifaCode: 'PLE' },\n  { isoCode: 'PT', name: 'Portugal', fifaCode: 'POR' },\n  { isoCode: 'PW', name: 'Palau', fifaCode: 'PLW' },\n  { isoCode: 'PY', name: 'Paraguay', fifaCode: 'PAR' },\n  { isoCode: 'QA', name: 'Qatar', fifaCode: 'QAT' },\n  { isoCode: 'RE', name: 'Reunion', fifaCode: 'REU' },\n  { isoCode: 'RO', name: 'Romania', fifaCode: 'ROU' },\n  { isoCode: 'RS', name: 'Serbia', fifaCode: 'SRB' },\n  { isoCode: 'RU', name: 'Russian Federation', fifaCode: 'RUS' },\n  { isoCode: 'RW', name: 'Rwanda', fifaCode: 'RWA' },\n  { isoCode: 'SA', name: 'Saudi Arabia', fifaCode: 'KSA' },\n  { isoCode: 'SB', name: 'Solomon Islands', fifaCode: 'SOL' },\n  { isoCode: 'SC', name: 'Seychelles', fifaCode: 'SEY' },\n  { isoCode: 'SD', name: 'Sudan', fifaCode: 'SUD' },\n  { isoCode: 'SE', name: 'Sweden', fifaCode: 'SWE' },\n  { isoCode: 'SG', name: 'Singapore', fifaCode: 'SIN' },\n  { isoCode: 'SH', name: 'Saint Helena', fifaCode: 'SHN' },\n  { isoCode: 'SI', name: 'Slovenia', fifaCode: 'SVN' },\n  { isoCode: 'SJ', name: 'Svalbard and Jan Mayen', fifaCode: 'SJM' },\n  { isoCode: 'SK', name: 'Slovakia', fifaCode: 'SVK' },\n  { isoCode: 'SL', name: 'Sierra Leone', fifaCode: 'SLE' },\n  { isoCode: 'SM', name: 'San Marino', fifaCode: 'SMR' },\n  { isoCode: 'SN', name: 'Senegal', fifaCode: 'SEN' },\n  { isoCode: 'SO', name: 'Somalia', fifaCode: 'SOM' },\n  { isoCode: 'SR', name: 'Suriname', fifaCode: 'SUR' },\n  { isoCode: 'SS', name: 'South Sudan', fifaCode: 'SCO' },\n  { isoCode: 'ST', name: 'Sao Tome and Principe', fifaCode: 'STP' },\n  { isoCode: 'SV', name: 'El Salvador', fifaCode: 'SLV' },\n  { isoCode: 'SX', name: 'Sint Maarten', fifaCode: 'SXM' },\n  { isoCode: 'SY', name: 'Syrian Arab Republic', fifaCode: 'SYR' },\n  { isoCode: 'SZ', name: 'Swaziland', fifaCode: 'SWZ' },\n  { isoCode: 'TC', name: 'Turks and Caicos Islands', fifaCode: 'TCA' },\n  { isoCode: 'TD', name: 'Chad', fifaCode: 'CHA' },\n  { isoCode: 'TF', name: 'French Southern Territories', fifaCode: 'ATF' },\n  { isoCode: 'TG', name: 'Togo', fifaCode: 'TGO' },\n  { isoCode: 'TH', name: 'Thailand', fifaCode: 'THA' },\n  { isoCode: 'TJ', name: 'Tajikistan', fifaCode: 'TJK' },\n  { isoCode: 'TK', name: 'Tokelau', fifaCode: 'TKL' },\n  { isoCode: 'TM', name: 'Turkmenistan', fifaCode: 'TKM' },\n  { isoCode: 'TN', name: 'Tunisia', fifaCode: 'TUN' },\n  { isoCode: 'TO', name: 'Tonga', fifaCode: 'TGA' },\n  { isoCode: 'TL', name: 'East Timor', fifaCode: 'TLS' },\n  { isoCode: 'TR', name: 'Turkey', fifaCode: 'TUR' },\n  { isoCode: 'TT', name: 'Trinidad and Tobago', fifaCode: 'TRI' },\n  { isoCode: 'TV', name: 'Tuvalu', fifaCode: 'TUV' },\n  { isoCode: 'TW', name: 'Taiwan, Province of China', fifaCode: 'TPE' },\n  { isoCode: 'TZ', name: 'Tanzania, United Republic of', fifaCode: 'TAN' },\n  { isoCode: 'UA', name: 'Ukraine', fifaCode: 'UKR' },\n  { isoCode: 'UG', name: 'Uganda', fifaCode: 'UGA' },\n  { isoCode: 'UM', name: 'USA Minor Outlying Islands', fifaCode: 'UMI' },\n  { isoCode: 'US', name: 'United States', fifaCode: 'USA' },\n  { isoCode: 'UY', name: 'Uruguay', fifaCode: 'URU' },\n  { isoCode: 'UZ', name: 'Uzbekistan', fifaCode: 'UZB' },\n  { isoCode: 'VA', name: 'Vatican City State', fifaCode: 'VAT' },\n  { isoCode: 'VC', name: 'St Vincent and the Grenadines', fifaCode: 'VIN' },\n  { isoCode: 'VE', name: 'Venezuela', fifaCode: 'VEN' },\n  { isoCode: 'VG', name: 'Virgin Islands, British', fifaCode: 'VGB' },\n  { isoCode: 'VI', name: 'Virgin Islands, U.S.', fifaCode: 'VIR' },\n  { isoCode: 'VN', name: 'Viet Nam', fifaCode: 'VIE' },\n  { isoCode: 'VU', name: 'Vanuatu', fifaCode: 'VAN' },\n  { isoCode: 'WF', name: 'Wallis and Futuna', fifaCode: 'WLF' },\n  { isoCode: 'WS', name: 'Samoa', fifaCode: 'SAM' },\n  { isoCode: 'YE', name: 'Yemen', fifaCode: 'YEM' },\n  { isoCode: 'YT', name: 'Mayotte', fifaCode: 'MYT' },\n  { isoCode: 'ZA', name: 'South Africa', fifaCode: 'RSA' },\n  { isoCode: 'ZM', name: 'Zambia', fifaCode: 'ZAM' },\n  { isoCode: 'ZW', name: 'Zimbabwe', fifaCode: 'ZIM' },\n];\n","export type Sponsor = {\n  code: string;\n  language?: string;\n  colour: string;\n  competitionId: string;\n  image: string;\n  introText: {\n    translations: { [key: string]: string };\n  };\n  links: { [key: string]: string };\n  mainSponsor: string;\n  name: string;\n  secondaryColour: string;\n  tags: string[];\n  type: string;\n};\nexport type Competition = {\n  code: string;\n  id: string;\n  images: { FULL_LOGO: string };\n  translations: { name: { EN: string } };\n};\n/**\n * super simple hashing function\n */\nexport const hashCode = (input: string) => {\n  var hash = 0;\n  for (var i = 0; i < input.length; i++) {\n    var char = input.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    // Convert to 32bit integer\n    hash = hash & hash;\n  }\n  return hash;\n};\n\nexport function compareValues<T>(key: string, order = 'ASC') {\n  return function innerSort(a: T, b: T) {\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n      // property doesn't exist on either object\n      return 0;\n    }\n\n    const varA = typeof a[key] === 'string' ? a[key].toUpperCase() : a[key];\n    const varB = typeof b[key] === 'string' ? b[key].toUpperCase() : b[key];\n\n    let comparison = 0;\n    if (varA > varB) {\n      comparison = 1;\n    } else if (varA < varB) {\n      comparison = -1;\n    }\n    return order === 'DESC' ? comparison * -1 : comparison;\n  };\n}\n/**\n * fetch competitions for compDropdown\n */\nexport const fetchComps = async () => {\n  const comps = window.localStorage.getItem('compList');\n  if (!comps) {\n    const fetchComps = await fetch('https://comp.uefa.com/v2/competitions?regions=CONTINENTAL&regions=WORLDWIDE')\n      .then((resp) => resp.json() as Promise<Competition[]>)\n      .then((data) => data);\n    console.log(fetchComps);\n    window.localStorage.setItem('compList', JSON.stringify(fetchComps));\n    return fetchComps;\n  }\n  return JSON.parse(comps) as Competition[];\n};\n\nexport const makeToast = (titleText: string) => {\n  const prevToasts = document.querySelectorAll('pk-toast');\n  prevToasts.forEach((pt) => pt.parentNode.removeChild(pt));\n\n  const pkToast = document.createElement('pk-toast');\n  const pkToastItem = document.createElement('pk-toast-item');\n  pkToastItem.appearance = 'warning';\n  pkToastItem.dismiss = 'mixed';\n  pkToastItem.closeButton = true;\n  pkToastItem.dismissDelay = 3000;\n  const icon = document.createElement('div');\n  icon.slot = 'icon';\n  const pkicon = document.createElement('pk-icon');\n  pkicon.name = 'support-alert';\n  pkicon.color = 'support-02';\n  icon.appendChild(pkicon);\n  const title = document.createElement('div');\n  title.slot = 'title';\n  title.textContent = titleText;\n  pkToastItem.append(icon, title);\n  pkToast.append(pkToastItem);\n  return pkToast;\n};\n","import { countryCodes, defaultSelectedCountries } from './data';\nimport { compareValues } from './util';\n\nexport const getCountryCheckboxes = () => {\n  const checkboxContainer = document.querySelector('#countryCheckboxes');\n  return checkboxContainer.querySelectorAll('pk-checkbox') as NodeListOf<HTMLPkCheckboxElement>;\n};\n\nfunction getCheckedCheckboxes() {\n  const checkboxes = getCountryCheckboxes();\n  const list: HTMLPkCheckboxElement[] = [];\n  checkboxes.forEach((ac) => {\n    if (ac.checked) list.push(ac);\n  });\n  return list;\n}\n\nexport const toggleCheckboxes = async (check: boolean) => {\n  if (check) {\n    const sidePanel = document.querySelector('pk-side-panel');\n    await sidePanel.toggle();\n  }\n  const checkboxes = getCountryCheckboxes();\n  checkboxes.forEach((cb) => (cb.checked = check));\n};\n\nexport const makeCountryAvatars = () => {\n  const pkChip = document.querySelector('#pk-codes-chips');\n  const checkboxes = getCountryCheckboxes();\n  const ch: Node[] = [];\n  for (let index = 0; index < checkboxes.length; index++) {\n    const ac = checkboxes[index];\n    const wrapper = document.createElement('div');\n    wrapper.classList.add('icon-wrapper');\n    wrapper.dataset.countryValue = ac.value;\n    if (!defaultSelectedCountries.includes(ac.value)) wrapper.style.display = 'none';\n    const container = document.createElement('div');\n    container.classList.add('icon-container', 'pk-flex--column');\n    const chip = document.createElement('pk-avatar');\n    chip.type = 'image';\n    chip.size = 48;\n    chip.style.padding = 'var(--pk-spacing-xs2)';\n    chip.src = `http://purecatamphetamine.github.io/country-flag-icons/3x2/${ac.value}.svg`;\n    chip.title = ac.value;\n    const code = document.createElement('span');\n    code.textContent = ac.value;\n    container.append(chip, code);\n    wrapper.appendChild(container);\n    ch.push(wrapper);\n  }\n  pkChip.append(...ch);\n};\n\nconst setupCheckboxEventListeners = () => {\n  const checkboxes = getCountryCheckboxes();\n  checkboxes.forEach((ck) => {\n    ck.addEventListener('checkboxChange', (event: CustomEvent<{ isChecked: boolean }>) => {\n      const pkAvatar = document\n        .querySelector('#pk-codes-chips')\n        .querySelector(`div[data-country-value=\"${(event.target as HTMLPkCheckboxElement).value}\"]`) as HTMLElement;\n      pkAvatar.style.display = event.detail.isChecked ? 'block' : 'none';\n    });\n  });\n};\n\nexport const createCountryCheckboxes = () => {\n  const checkboxContainer = document.querySelector('#countryCheckboxes');\n  const sortedCc = countryCodes.sort(compareValues('isoCode'));\n  sortedCc.forEach((p) => {\n    const e = document.createElement('span');\n    e.slot = 'suffix';\n    const pkCheckbox = document.createElement('pk-checkbox');\n    pkCheckbox.name = p.name;\n    pkCheckbox.value = p.isoCode;\n    if (defaultSelectedCountries.includes(p.isoCode)) pkCheckbox.checked = true;\n    const id = document.createElement('pk-identifier');\n    // badge\n    const prefix = document.createElement('span');\n    prefix.setAttribute('slot', 'prefix');\n    const badge = document.createElement('pk-badge');\n    badge.src = `http://purecatamphetamine.github.io/country-flag-icons/3x2/${p.isoCode}.svg`;\n    prefix.appendChild(badge);\n    // content slots\n    const primary = document.createElement('span');\n    primary.setAttribute('slot', 'primary');\n    primary.textContent = p.name;\n    const secondary = document.createElement('span');\n    secondary.setAttribute('slot', 'secondary');\n    secondary.textContent = p.isoCode;\n    e.appendChild(pkCheckbox);\n    // appends\n    id.appendChild(prefix);\n    id.appendChild(primary);\n    id.appendChild(secondary);\n    id.appendChild(e);\n    checkboxContainer.appendChild(id);\n  });\n  setupCheckboxEventListeners();\n  makeCountryAvatars();\n};\n\n/** inputs section */\nexport const updateCustomInput = (event: CustomEvent<{ item: HTMLPkMenuItemElement }>, selectorID: string) => {\n  const tE = event.target as HTMLElement;\n  for (let i = 0; i < tE.children.length; i += 1) {\n    const child = tE.children[i];\n    if (child.tagName.toLowerCase() === 'pk-menu-item') tE.children[i].setAttribute('selected', 'false');\n  }\n\n  const targetElement = event.detail.item;\n  targetElement.setAttribute('selected', 'true');\n  const itemValue = targetElement.getAttribute('value');\n  if (itemValue) {\n    const baseUrl = document.querySelector(selectorID);\n    baseUrl.setAttribute('pk-value', itemValue);\n    const textSection = baseUrl.querySelector(`${selectorID}Selection`);\n    textSection.textContent = targetElement.getAttribute('printValue');\n  }\n};\n\nexport const extractInputData = () => {\n  //get values from inputs\n  const inputValue = document.querySelector<HTMLInputElement>('#competitionId').getAttribute('pk-value');\n  const inputCountryCodes = getCheckedCheckboxes().map((p) => p.value);\n  const baseUrl = document.querySelector<HTMLInputElement>('#baseUrl').getAttribute('pk-value');\n  const competitionIdArray = [inputValue].filter(Boolean);\n\n  const countryCodesArray = inputCountryCodes.map((cc) => cc.trim().toUpperCase()).filter(Boolean);\n  return {\n    cupArray: competitionIdArray,\n    countries: countryCodesArray,\n    url: baseUrl,\n  };\n};\n","import { compareValues, Sponsor } from './util';\n\nconst makePkCells = (columnKey: string, appendItems: Node[]) => {\n  const newItem = document.createElement('pk-table-cell');\n  newItem.setAttribute('column-key', columnKey);\n  newItem.withDivider = true;\n  newItem.classList.add('pk-text--wrap', 'pk-text--break');\n  newItem.style.setProperty('--pk-cell--justify-content', 'space-evenly');\n  appendItems.forEach((ap) => newItem.appendChild(ap));\n  if (appendItems.length > 1) newItem.classList.add('pk-flex--column');\n  return newItem;\n};\n\nconst makePkCell = (columnKey: string, appendItem: Node) => makePkCells(columnKey, [appendItem]);\n\nconst createPkIdentifier = (propValue: string, bgColor = 'white', color = 'black', columnKey?: string) => {\n  const pkIdentifier = document.createElement('pk-identifier');\n  const pkId = document.createElement('span');\n  pkId.setAttribute('slot', 'primary');\n  pkId.classList.add('pk-text--wrap', 'pk-text--break');\n  pkId.textContent = propValue;\n  pkIdentifier.appendChild(pkId);\n  if (columnKey) {\n    const pkSec = document.createElement('span');\n    pkSec.setAttribute('slot', 'secondary');\n    pkSec.textContent = columnKey;\n    pkIdentifier.primarySize = '24';\n    pkIdentifier.appendChild(document.createElement('pk-divider'));\n    pkIdentifier.appendChild(pkSec);\n  }\n  pkIdentifier.alignment = 'center';\n  pkIdentifier.style.setProperty('--pk-identifier-primary--color', color);\n  pkIdentifier.style.setProperty('--pk-identifier--bg-color', bgColor);\n  return pkIdentifier;\n};\n\n/*\nprint column from values\n*/\nexport const printColumn = (\n  newRow: HTMLElement,\n  propValue: string,\n  columnKey: string,\n  bgColor = 'white',\n  color = 'black',\n) => {\n  const pkIdentifier = createPkIdentifier(propValue, bgColor, color);\n  newRow.appendChild(makePkCell(columnKey, pkIdentifier));\n};\nexport const printColumnItems = (newRow: HTMLElement, columnKey: string, pkIdentifiers: HTMLPkIdentifierElement[]) => {\n  newRow.appendChild(makePkCells(columnKey, pkIdentifiers));\n};\n/**\n * print column from list of values\n */\nexport const printColumnList = (\n  newRow: HTMLElement,\n  columnKey: string,\n  propObj: { [key: string]: string },\n  addCopyButton?: boolean,\n) => {\n  const ul = document.createElement('pk-data-card');\n  ul.style.width = 'fit-content';\n  const header = document.createElement('div');\n  header.setAttribute('slot', 'body');\n  for (const key in propObj) {\n    const li = document.createElement('pk-list-item');\n    li.setAttribute('has-divider', 'true');\n    const pkIdentifier = document.createElement('pk-identifier');\n    pkIdentifier.style.setProperty('--pk-identifier-primary--color', 'black');\n    pkIdentifier.style.setProperty('--pk-identifier--bg-color', 'white');\n\n    const prefix = document.createElement('span');\n    prefix.setAttribute('slot', 'prefix');\n    prefix.textContent = key;\n    const pkId = document.createElement('span');\n    pkId.setAttribute('slot', 'primary');\n    pkId.textContent = propObj[key];\n    pkIdentifier.appendChild(prefix);\n    pkIdentifier.appendChild(pkId);\n    if (addCopyButton) {\n      const suffix = document.createElement('span');\n      suffix.classList.add('clickable-identifiers');\n      suffix.slot = 'suffix';\n      const icon = document.createElement('pk-icon');\n      icon.name = 'actions-copy';\n      suffix.appendChild(icon);\n      suffix.addEventListener('click', () => navigator.clipboard.writeText(propObj[key]));\n      pkIdentifier.appendChild(suffix);\n    }\n    li.appendChild(pkIdentifier);\n    header.appendChild(li);\n  }\n  ul.appendChild(header);\n  newRow.appendChild(newRow.tagName === 'PK-TABLE-ROW' ? makePkCell(columnKey, ul) : ul);\n};\n\n/**\n * map sponsor to a PkTableRowItem\n * @param sponsor\n * @returns\n */\nexport const mapSponsor = (sponsor: Sponsor) => {\n  const newRow = document.createElement('pk-table-row');\n  newRow.id = sponsor.code;\n\n  // Insert a cell at the end of the row\n  printColumn(newRow, sponsor.language, 'language');\n  printColumnItems(newRow, 'info', [\n    createPkIdentifier(sponsor.mainSponsor, '', '', 'mainSponsor'),\n    createPkIdentifier(sponsor.code, '', '', 'code'),\n    createPkIdentifier(sponsor.name, '', '', 'name'),\n    createPkIdentifier(sponsor.type, '', '', 'type'),\n  ]);\n  printColumnItems(newRow, 'colors', [\n    createPkIdentifier(sponsor.colour, sponsor.colour, sponsor.secondaryColour, 'main'),\n    createPkIdentifier(sponsor.secondaryColour, sponsor.secondaryColour, sponsor.colour, 'secondary'),\n  ]);\n\n  // image cell\n  var img = document.createElement('img');\n  img.src = sponsor.image;\n  const lastNode = newRow.children.item(newRow.children.length - 1);\n  lastNode.appendChild(img);\n\n  const btn = document.createElement('pk-button');\n  btn.classList.remove('adaptive-width');\n  btn.textContent = 'Open links';\n  btn.addEventListener('click', () => {\n    const e = document.querySelector<HTMLElement>('#urls-showing');\n    e.innerHTML = '';\n    printColumnList(e, 'links', sponsor.links, true);\n    const e2 = document.querySelector('pk-overlay');\n    e2.isOpen = true;\n  });\n  const urlsCell = makePkCell('links', btn);\n  newRow.appendChild(urlsCell);\n\n  printColumnList(newRow, 'introText', sponsor.introText.translations);\n  const tagItems = sponsor.tags.reduce((now, tg, i) => Object.assign(now, { [i]: tg }), {});\n  printColumnList(newRow, 'tags', tagItems);\n\n  return newRow;\n};\n\n/**\n * generate PkTableBody from array of sponsors\n * @param sponsors\n */\nexport const generateTableBody = (sponsors: Sponsor[]) => {\n  const tbodyRef = document.getElementById('sponsor-table').getElementsByTagName('pk-table-body')[0];\n  //cleanup old table\n  tbodyRef.innerHTML = '';\n  const hideEmpty = sponsors.length ? 'none' : 'block';\n  document.querySelector<HTMLElement>('#noContentFound').style.display = hideEmpty;\n  sponsors.forEach((sp) => tbodyRef.appendChild(mapSponsor(sp)));\n};\n\n/**\n * sort PkTableBody\n * @param event\n * @param items\n */\nexport const sortTableBy = (columnKey: string, order: string, items: { [key: string]: Sponsor }) => {\n  const tableElement = document.querySelector<HTMLElement>('pk-table');\n  const tableBodyElement = tableElement.querySelector<HTMLElement>('pk-table-body');\n  tableBodyElement.style.height = `${tableBodyElement.offsetHeight}px`;\n  const sortSponsors = Object.values(items).sort(compareValues(columnKey, order));\n  generateTableBody(sortSponsors);\n};\n","import {\n  createCountryCheckboxes,\n  extractInputData,\n  makeCountryAvatars,\n  toggleCheckboxes,\n  updateCustomInput,\n} from './selectorsUtil';\nimport { generateTableBody, sortTableBy } from './tableUtil';\nimport { fetchComps, hashCode, makeToast, Sponsor } from './util';\n\nconst arrayResponseHashes: { [key: string]: Sponsor } = {};\n\nconst clearPreviousHashedItems = () => Object.keys(arrayResponseHashes).forEach((k) => delete arrayResponseHashes[k]);\n\nconst extractSponsorItems = (sponsors: Sponsor[], countryCode: string) => {\n  sponsors.forEach((sponsor: Sponsor) => {\n    // check if hash is in the array, otherwise add a new sponsor\n    const respHash = hashCode(JSON.stringify(sponsor));\n    if (!arrayResponseHashes[respHash]) {\n      sponsor.language = countryCode;\n      arrayResponseHashes[respHash] = sponsor;\n    } else {\n      // I find the existing sponsor and I add the language to the codes\n      const existingRow = arrayResponseHashes[respHash];\n      existingRow.language += `, ${countryCode}`;\n    }\n  });\n};\n\n/**\n * onclick button handler\n */\nconst getCompetitionData = () => {\n  const { cupArray: cups, countries, url: baseEndpoint } = extractInputData();\n  if (!cups.length || !countries.length || !baseEndpoint) {\n    let text = 'You miss: ';\n    if (!baseEndpoint) text += 'the endpoint to use - ';\n    if (!cups.length) text += 'the desidered cup - ';\n    if (!countries.length) text += 'a min. of 1 country - ';\n\n    const sendToast = document.querySelector('#pk-codes-chips');\n    sendToast.appendChild(makeToast(text.substring(0, text.length - 2)));\n    return;\n  }\n\n  const apiCalls = [];\n  clearPreviousHashedItems();\n  const table = document.querySelector<HTMLPkTableElement>('#sponsor-table');\n  table.loading = true;\n  //loop through comp and countries\n  cups.forEach((competitionId) => {\n    countries.forEach((countryCode) => {\n      const url = baseEndpoint.replace('{competition}', competitionId).replace('{countryCode}', countryCode);\n\n      const apiCall = fetch(url)\n        .then((response) => response.json() as Promise<Sponsor[]>)\n        .then((sponsors) => {\n          extractSponsorItems(sponsors, countryCode);\n        });\n      apiCalls.push(apiCall);\n    });\n  });\n  // as soon as all the api calls are done...\n  Promise.all(apiCalls).then(() => {\n    console.info(`all your urls are belong to us`);\n    sortTableBy('mainSponsor', 'ASC', arrayResponseHashes);\n    table.loading = false;\n  });\n};\n\n/** listeners setup section */\nconst dropdownSelectors = ['#baseUrl', '#competitionId'];\ndropdownSelectors.forEach((selector) => {\n  document\n    .querySelector(selector)\n    .querySelector('pk-menu')\n    .addEventListener('pkSelect', (event: CustomEvent<{ item: HTMLPkMenuItemElement }>) =>\n      updateCustomInput(event, selector),\n    );\n});\n\ncreateCountryCheckboxes();\ndocument.querySelector('#select-all-checkboxes').addEventListener('click', () => toggleCheckboxes(true));\ndocument.querySelector('#clear-all-checkboxes').addEventListener('click', () => toggleCheckboxes(false));\n\ndocument.getElementById('get-competition-button').addEventListener('click', getCompetitionData);\ndocument.addEventListener('pkTableSortBy', (ev: CustomEvent) =>\n  sortTableBy(ev.detail.columnKey, ev.detail.order, arrayResponseHashes),\n);\n\n/**\n * first load setup\n */\n(async () => {\n  const comps = await fetchComps();\n  const dpComps = document.querySelector<HTMLElement>('#competitionId').querySelector<HTMLPkMenuElement>('pk-menu');\n  comps\n    .sort((c, c1) => (Number.parseInt(c.id, 10) > Number.parseInt(c1.id, 10) ? 1 : -1))\n    .forEach((cp) => {\n      const menuItem = document.createElement('pk-menu-item');\n      menuItem.value = cp.id;\n      menuItem.setAttribute('printValue', `${cp.id}: ${cp.code}`);\n      menuItem.textContent = `${cp.id}: ${cp.translations.name.EN}`;\n      dpComps.appendChild(menuItem);\n    });\n})();\n"],"names":["$9a8cebc34540b0c1$export$5a0959b716beef1","$9a8cebc34540b0c1$export$7bc41e2d36612b98","isoCode","name","fifaCode","$9fd44832378de894$export$6ab1df3197f7c641","key","order","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison","$4c2cb61db2559199$export$930d331b59706944","document","querySelector","querySelectorAll","$4c2cb61db2559199$export$f5c6543a3807a093","async","check","sidePanel","toggle","forEach","cb","checked","$4c2cb61db2559199$export$98d663e87a27ca13","inputValue","getAttribute","inputCountryCodes","checkboxes","list","ac","push","$4c2cb61db2559199$var$getCheckedCheckboxes","map","p","value","baseUrl","cupArray","filter","Boolean","countries","cc","trim","url","$fedfec13e4cc623e$var$makePkCells","columnKey","appendItems","newItem","createElement","setAttribute","withDivider","classList","add","style","setProperty","ap","appendChild","length","$fedfec13e4cc623e$var$makePkCell","appendItem","$fedfec13e4cc623e$var$createPkIdentifier","propValue","bgColor","color","pkIdentifier","pkId","textContent","pkSec","primarySize","alignment","$fedfec13e4cc623e$export$32d064839f7f18da","newRow","pkIdentifiers","$fedfec13e4cc623e$export$db090a681ed76ec9","propObj","addCopyButton","ul","width","header","li","prefix","suffix","slot","icon","addEventListener","navigator","clipboard","writeText","tagName","$fedfec13e4cc623e$export$61654e3859dce6e2","sponsor","id","code","$fedfec13e4cc623e$export$c9b006afce059d98","language","mainSponsor","type","colour","secondaryColour","img","src","image","children","item","btn","remove","e","innerHTML","links","isOpen","urlsCell","introText","translations","tagItems","tags","reduce","now","tg","i","Object","assign","$fedfec13e4cc623e$export$19eca339421918e3","items","tableBodyElement","height","offsetHeight","sponsors","tbodyRef","getElementById","getElementsByTagName","hideEmpty","display","sp","$fedfec13e4cc623e$export$b2e95bdb7cffb138","values","sort","$ad2bcec7a0192558$var$arrayResponseHashes","selector","event","selectorID","tE","target","toLowerCase","targetElement","detail","itemValue","$4c2cb61db2559199$export$7911d5cfafc7ef49","checkboxContainer","pkCheckbox","includes","badge","primary","secondary","ck","isChecked","pkChip","ch","index","wrapper","dataset","countryValue","container","chip","size","padding","title","append","$4c2cb61db2559199$export$3610b713aa132eea","$4c2cb61db2559199$export$868bb792be9530be","cups","baseEndpoint","text","titleText","pt","parentNode","removeChild","pkToast","pkToastItem","appearance","dismiss","closeButton","dismissDelay","pkicon","$9fd44832378de894$export$6779263a4a120d42","substring","apiCalls","keys","k","table","loading","competitionId","countryCode","replace","apiCall","fetch","then","response","json","respHash","input","hash","charCodeAt","$9fd44832378de894$export$d41d9ab3de2def3d","JSON","stringify","$ad2bcec7a0192558$var$extractSponsorItems","Promise","all","console","info","ev","comps","window","localStorage","getItem","$9fd44832378de894$export$902a0d3aad41968","resp","data","log","setItem","parse","dpComps","c","c1","Number","parseInt","cp","menuItem","EN"],"version":3,"file":"index.c87218b3.js.map"}