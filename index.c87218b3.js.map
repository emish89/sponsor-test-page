{"mappings":"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","sources":["src/data.ts","src/util.ts","src/selectorsUtil.ts","src/tableUtil.ts","src/main.ts"],"sourcesContent":["export const defaultSelectedCountries = [\r\n  'CN',\r\n  'CY',\r\n  'DE',\r\n  'EE',\r\n  'ES',\r\n  'FR',\r\n  'GB',\r\n  'IL',\r\n  'IS',\r\n  'IT',\r\n  'KZ',\r\n  'LT',\r\n  'LV',\r\n  'MC',\r\n  'MD',\r\n  'MO',\r\n  'NO',\r\n  'RU',\r\n  'SE',\r\n  'TR',\r\n  'UA',\r\n];\r\nexport const countryCodes = [\r\n  { isoCode: 'AD', name: 'Andorra', fifaCode: 'AND' },\r\n  { isoCode: 'AE', name: 'United Arab Emirates', fifaCode: 'UAE' },\r\n  { isoCode: 'AF', name: 'Afghanistan', fifaCode: 'AFG' },\r\n  { isoCode: 'AG', name: 'Antigua and Barbuda', fifaCode: 'ATG' },\r\n  { isoCode: 'AI', name: 'Anguilla', fifaCode: 'AIA' },\r\n  { isoCode: 'AL', name: 'Albania', fifaCode: 'ALB' },\r\n  { isoCode: 'AM', name: 'Armenia', fifaCode: 'ARM' },\r\n  { isoCode: 'AO', name: 'Angola', fifaCode: 'ANG' },\r\n  { isoCode: 'AQ', name: 'Antarctica', fifaCode: 'ATA' },\r\n  { isoCode: 'AR', name: 'Argentina', fifaCode: 'ARG' },\r\n  { isoCode: 'AS', name: 'American Samoa', fifaCode: 'ASA' },\r\n  { isoCode: 'AT', name: 'Austria', fifaCode: 'AUT' },\r\n  { isoCode: 'AU', name: 'Australia', fifaCode: 'AUS' },\r\n  { isoCode: 'AW', name: 'Aruba', fifaCode: 'ARU' },\r\n  { isoCode: 'AZ', name: 'Azerbaijan', fifaCode: 'AZE' },\r\n  { isoCode: 'BA', name: 'Bosnia and Herzegovina', fifaCode: 'BIH' },\r\n  { isoCode: 'BB', name: 'Barbados', fifaCode: 'BRB' },\r\n  { isoCode: 'BD', name: 'Bangladesh', fifaCode: 'BAN' },\r\n  { isoCode: 'BE', name: 'Belgium', fifaCode: 'BEL' },\r\n  { isoCode: 'BF', name: 'Burkina Faso', fifaCode: 'BFA' },\r\n  { isoCode: 'BG', name: 'Bulgaria', fifaCode: 'BUL' },\r\n  { isoCode: 'BH', name: 'Bahrain', fifaCode: 'BHR' },\r\n  { isoCode: 'BI', name: 'Burundi', fifaCode: 'BDI' },\r\n  { isoCode: 'BJ', name: 'Benin', fifaCode: 'BEN' },\r\n  { isoCode: 'BL', name: 'Saint Barthelemy', fifaCode: 'BLM' },\r\n  { isoCode: 'BM', name: 'Bermuda', fifaCode: 'BER' },\r\n  { isoCode: 'BN', name: 'Brunei Darussalam', fifaCode: 'BRU' },\r\n  { isoCode: 'BO', name: 'Bolivia', fifaCode: 'BOL' },\r\n  { isoCode: 'BQ', name: 'Bonaire, Saint Eustatius and Saba', fifaCode: 'BES' },\r\n  { isoCode: 'BR', name: 'Brazil', fifaCode: 'BRA' },\r\n  { isoCode: 'BS', name: 'Bahamas', fifaCode: 'BAH' },\r\n  { isoCode: 'BT', name: 'Bhutan', fifaCode: 'BHU' },\r\n  { isoCode: 'BV', name: 'Bouvet Island', fifaCode: 'BVT' },\r\n  { isoCode: 'BW', name: 'Botswana', fifaCode: 'BOT' },\r\n  { isoCode: 'BY', name: 'Belarus', fifaCode: 'BLR' },\r\n  { isoCode: 'BZ', name: 'Belize', fifaCode: 'BLZ' },\r\n  { isoCode: 'CA', name: 'Canada', fifaCode: 'CAN' },\r\n  { isoCode: 'CC', name: 'Cocos (Keeling) Islands', fifaCode: 'CCK' },\r\n  { isoCode: 'CD', name: 'Congo, Democratic Republic of the', fifaCode: 'COD' },\r\n  { isoCode: 'CF', name: 'Central African Republic', fifaCode: 'CTA' },\r\n  { isoCode: 'CG', name: 'Congo', fifaCode: 'CGO' },\r\n  { isoCode: 'CH', name: 'Switzerland', fifaCode: 'SUI' },\r\n  { isoCode: 'CI', name: \"Cote d'Ivoire\", fifaCode: 'CIV' },\r\n  { isoCode: 'CK', name: 'Cook Islands', fifaCode: 'COK' },\r\n  { isoCode: 'CL', name: 'Chile', fifaCode: 'CHI' },\r\n  { isoCode: 'CM', name: 'Cameroon', fifaCode: 'CMR' },\r\n  { isoCode: 'CN', name: 'China', fifaCode: 'CHN' },\r\n  { isoCode: 'CO', name: 'Colombia', fifaCode: 'COL' },\r\n  { isoCode: 'CR', name: 'Costa Rica', fifaCode: 'CRC' },\r\n  { isoCode: 'CU', name: 'Cuba', fifaCode: 'CUB' },\r\n  { isoCode: 'CV', name: 'Cape Verde', fifaCode: 'CPV' },\r\n  { isoCode: 'CW', name: 'Curacao', fifaCode: 'CUW' },\r\n  { isoCode: 'CX', name: 'Christmas Island', fifaCode: 'CXR' },\r\n  { isoCode: 'CY', name: 'Cyprus', fifaCode: 'CYP' },\r\n  { isoCode: 'CZ', name: 'Czech Republic', fifaCode: 'CZE' },\r\n  { isoCode: 'DE', name: 'Germany', fifaCode: 'GER' },\r\n  { isoCode: 'DJ', name: 'Djibouti', fifaCode: 'DJI' },\r\n  { isoCode: 'DK', name: 'Denmark', fifaCode: 'DEN' },\r\n  { isoCode: 'DM', name: 'Dominica', fifaCode: 'DMA' },\r\n  { isoCode: 'DO', name: 'Dominican Republic', fifaCode: 'DOM' },\r\n  { isoCode: 'DZ', name: 'Algeria', fifaCode: 'ALG' },\r\n  { isoCode: 'EC', name: 'Ecuador', fifaCode: 'ECU' },\r\n  { isoCode: 'EE', name: 'Estonia', fifaCode: 'EST' },\r\n  { isoCode: 'EG', name: 'Egypt', fifaCode: 'EGY' },\r\n  { isoCode: 'EH', name: 'Western Sahara', fifaCode: 'ESH' },\r\n  { isoCode: 'ER', name: 'Eritrea', fifaCode: 'ERI' },\r\n  { isoCode: 'ES', name: 'Spain', fifaCode: 'ESP' },\r\n  { isoCode: 'ET', name: 'Ethiopia', fifaCode: 'ETH' },\r\n  { isoCode: 'FI', name: 'Finland', fifaCode: 'FIN' },\r\n  { isoCode: 'FJ', name: 'Fiji', fifaCode: 'FIJ' },\r\n  { isoCode: 'FK', name: 'Falkland Islands (Malvinas)', fifaCode: 'FLK' },\r\n  { isoCode: 'FM', name: 'Micronesia, Federated States of', fifaCode: 'FSM' },\r\n  { isoCode: 'FO', name: 'Faroe Islands', fifaCode: 'FRO' },\r\n  { isoCode: 'FR', name: 'France', fifaCode: 'FRA' },\r\n  { isoCode: 'GA', name: 'Gabon', fifaCode: 'GAB' },\r\n  { isoCode: 'GB', name: 'United Kingdom', fifaCode: 'GBR' },\r\n  { isoCode: 'GD', name: 'Grenada', fifaCode: 'GRN' },\r\n  { isoCode: 'GE', name: 'Georgia', fifaCode: 'GEO' },\r\n  { isoCode: 'GF', name: 'French Guiana', fifaCode: 'GUF' },\r\n  { isoCode: 'GH', name: 'Ghana', fifaCode: 'GHA' },\r\n  { isoCode: 'GI', name: 'Gibraltar', fifaCode: 'GIB' },\r\n  { isoCode: 'GG', name: 'Guernsey', fifaCode: 'GGY' },\r\n  { isoCode: 'GL', name: 'Greenland', fifaCode: 'GRL' },\r\n  { isoCode: 'GM', name: 'Gambia', fifaCode: 'GAM' },\r\n  { isoCode: 'GN', name: 'Guinea', fifaCode: 'GUI' },\r\n  { isoCode: 'GP', name: 'Guadeloupe', fifaCode: 'GLP' },\r\n  { isoCode: 'GQ', name: 'Equatorial Guinea', fifaCode: 'EQG' },\r\n  { isoCode: 'GR', name: 'Greece', fifaCode: 'GRE' },\r\n  { isoCode: 'GS', name: 'South Georgia/South Sandwich Isl.', fifaCode: 'SGS' },\r\n  { isoCode: 'GT', name: 'Guatemala', fifaCode: 'GUA' },\r\n  { isoCode: 'GU', name: 'Guam', fifaCode: 'GUM' },\r\n  { isoCode: 'GW', name: 'Guinea-Bissau', fifaCode: 'GNB' },\r\n  { isoCode: 'GY', name: 'Guyana', fifaCode: 'GUY' },\r\n  { isoCode: 'HK', name: 'Hong Kong', fifaCode: 'HKG' },\r\n  { isoCode: 'HM', name: 'Heard Island and Mcdonald Islands', fifaCode: 'HMD' },\r\n  { isoCode: 'HN', name: 'Honduras', fifaCode: 'HUN' },\r\n  { isoCode: 'HR', name: 'Croatia', fifaCode: 'CRO' },\r\n  { isoCode: 'HT', name: 'Haiti', fifaCode: 'HAI' },\r\n  { isoCode: 'HU', name: 'Hungary', fifaCode: 'HUN' },\r\n  { isoCode: 'ID', name: 'Indonesia', fifaCode: 'IDN' },\r\n  { isoCode: 'IE', name: 'Ireland', fifaCode: 'IRL' },\r\n  { isoCode: 'IL', name: 'Israel', fifaCode: 'ISR' },\r\n  { isoCode: 'IM', name: 'Isle of Man', fifaCode: 'IMN' },\r\n  { isoCode: 'IN', name: 'India', fifaCode: 'IND' },\r\n  { isoCode: 'IO', name: 'British Indian Ocean Territory', fifaCode: 'IOT' },\r\n  { isoCode: 'IQ', name: 'Iraq', fifaCode: 'IRQ' },\r\n  { isoCode: 'IR', name: 'Iran', fifaCode: 'IRN' },\r\n  { isoCode: 'IS', name: 'Iceland', fifaCode: 'ISL' },\r\n  { isoCode: 'IT', name: 'Italy', fifaCode: 'ITA' },\r\n  { isoCode: 'JE', name: 'Jersey', fifaCode: 'JEY' },\r\n  { isoCode: 'JM', name: 'Jamaica', fifaCode: 'JAM' },\r\n  { isoCode: 'JO', name: 'Jordan', fifaCode: 'JOR' },\r\n  { isoCode: 'JP', name: 'Japan', fifaCode: 'JPN' },\r\n  { isoCode: 'KE', name: 'Kenya', fifaCode: 'KEN' },\r\n  { isoCode: 'KG', name: 'Kyrgyzstan', fifaCode: 'KGZ' },\r\n  { isoCode: 'KH', name: 'Cambodia', fifaCode: 'CAM' },\r\n  { isoCode: 'KI', name: 'Kiribati', fifaCode: 'KIR' },\r\n  { isoCode: 'KM', name: 'Comoros', fifaCode: 'COM' },\r\n  { isoCode: 'KN', name: 'Saint Kitts and Nevis', fifaCode: 'SKN' },\r\n  { isoCode: 'KP', name: 'North Korea', fifaCode: 'PRK' },\r\n  { isoCode: 'KR', name: 'South Korea', fifaCode: 'KOR' },\r\n  { isoCode: 'KW', name: 'Kuwait', fifaCode: 'KUW' },\r\n  { isoCode: 'KY', name: 'Cayman Islands', fifaCode: 'CAY' },\r\n  { isoCode: 'KZ', name: 'Kazakhstan', fifaCode: 'KAZ' },\r\n  { isoCode: 'LA', name: 'Laos', fifaCode: 'LAO' },\r\n  { isoCode: 'LB', name: 'Lebanon', fifaCode: 'LIB' },\r\n  { isoCode: 'LC', name: 'Saint Lucia', fifaCode: 'LCA' },\r\n  { isoCode: 'LI', name: 'Liechtenstein', fifaCode: 'LIE' },\r\n  { isoCode: 'LK', name: 'Sri Lanka', fifaCode: 'SRI' },\r\n  { isoCode: 'LR', name: 'Liberia', fifaCode: 'LBR' },\r\n  { isoCode: 'LS', name: 'Lesotho', fifaCode: 'LES' },\r\n  { isoCode: 'LT', name: 'Lithuania', fifaCode: 'LTU' },\r\n  { isoCode: 'LU', name: 'Luxembourg', fifaCode: 'LUX' },\r\n  { isoCode: 'LV', name: 'Latvia', fifaCode: 'LVA' },\r\n  { isoCode: 'LY', name: 'Libyan Arab Jamahiriya', fifaCode: 'LBY' },\r\n  { isoCode: 'MA', name: 'Morocco', fifaCode: 'MAR' },\r\n  { isoCode: 'MC', name: 'Monaco', fifaCode: 'MCO' },\r\n  { isoCode: 'MD', name: 'Moldova', fifaCode: 'MDA' },\r\n  { isoCode: 'ME', name: 'Montenegro', fifaCode: 'MNE' },\r\n  { isoCode: 'MG', name: 'Madagascar', fifaCode: 'MAD' },\r\n  { isoCode: 'MH', name: 'Marshall Islands', fifaCode: 'MHL' },\r\n  { isoCode: 'MK', name: 'Macedonia', fifaCode: 'MKD' },\r\n  { isoCode: 'ML', name: 'Mali', fifaCode: 'MLI' },\r\n  { isoCode: 'MM', name: 'Myanmar', fifaCode: 'MYA' },\r\n  { isoCode: 'MN', name: 'Mongolia', fifaCode: 'MGL' },\r\n  { isoCode: 'MO', name: 'Macau', fifaCode: 'MAC' },\r\n  { isoCode: 'MP', name: 'Northern Mariana Islands', fifaCode: 'MNP' },\r\n  { isoCode: 'MQ', name: 'Martinique', fifaCode: 'MTQ' },\r\n  { isoCode: 'MR', name: 'Mauritania', fifaCode: 'MTN' },\r\n  { isoCode: 'MS', name: 'Montserrat', fifaCode: 'MSR' },\r\n  { isoCode: 'MT', name: 'Malta', fifaCode: 'MLT' },\r\n  { isoCode: 'MU', name: 'Mauritius', fifaCode: 'MRI' },\r\n  { isoCode: 'MV', name: 'Maldives', fifaCode: 'MDV' },\r\n  { isoCode: 'MW', name: 'Malawi', fifaCode: 'MWI' },\r\n  { isoCode: 'MX', name: 'Mexico', fifaCode: 'MEX' },\r\n  { isoCode: 'MY', name: 'Malaysia', fifaCode: 'MAS' },\r\n  { isoCode: 'MZ', name: 'Mozambique', fifaCode: 'MOZ' },\r\n  { isoCode: 'NA', name: 'Namibia', fifaCode: 'NAM' },\r\n  { isoCode: 'NC', name: 'New Caledonia', fifaCode: 'NCL' },\r\n  { isoCode: 'NE', name: 'Niger', fifaCode: 'NIG' },\r\n  { isoCode: 'NF', name: 'Norfolk Island', fifaCode: 'NFK' },\r\n  { isoCode: 'NG', name: 'Nigeria', fifaCode: 'NGA' },\r\n  { isoCode: 'NI', name: 'Nicaragua', fifaCode: 'NCA' },\r\n  { isoCode: 'NL', name: 'Netherlands', fifaCode: 'NED' },\r\n  { isoCode: 'NO', name: 'Norway', fifaCode: 'NOR' },\r\n  { isoCode: 'NP', name: 'Nepal', fifaCode: 'NEP' },\r\n  { isoCode: 'NR', name: 'Nauru', fifaCode: 'NIR' },\r\n  { isoCode: 'NU', name: 'Niue', fifaCode: 'NIU' },\r\n  { isoCode: 'NZ', name: 'New Zealand', fifaCode: 'NZL' },\r\n  { isoCode: 'OM', name: 'Oman', fifaCode: 'OMA' },\r\n  { isoCode: 'PA', name: 'Panama', fifaCode: 'PAN' },\r\n  { isoCode: 'PE', name: 'Peru', fifaCode: 'PER' },\r\n  { isoCode: 'PF', name: 'French Polynesia', fifaCode: 'PYF' },\r\n  { isoCode: 'PG', name: 'Papua New Guinea', fifaCode: 'PNG' },\r\n  { isoCode: 'PH', name: 'Philippines', fifaCode: 'PHI' },\r\n  { isoCode: 'PK', name: 'Pakistan', fifaCode: 'PAK' },\r\n  { isoCode: 'PL', name: 'Poland', fifaCode: 'POL' },\r\n  { isoCode: 'PM', name: 'Saint Pierre and Miquelon', fifaCode: 'SPM' },\r\n  { isoCode: 'PN', name: 'Pitcairn', fifaCode: 'SPM' },\r\n  { isoCode: 'PR', name: 'Puerto Rico', fifaCode: 'PUR' },\r\n  { isoCode: 'PS', name: 'Palestinian Territory, Occupied', fifaCode: 'PLE' },\r\n  { isoCode: 'PT', name: 'Portugal', fifaCode: 'POR' },\r\n  { isoCode: 'PW', name: 'Palau', fifaCode: 'PLW' },\r\n  { isoCode: 'PY', name: 'Paraguay', fifaCode: 'PAR' },\r\n  { isoCode: 'QA', name: 'Qatar', fifaCode: 'QAT' },\r\n  { isoCode: 'RE', name: 'Reunion', fifaCode: 'REU' },\r\n  { isoCode: 'RO', name: 'Romania', fifaCode: 'ROU' },\r\n  { isoCode: 'RS', name: 'Serbia', fifaCode: 'SRB' },\r\n  { isoCode: 'RU', name: 'Russian Federation', fifaCode: 'RUS' },\r\n  { isoCode: 'RW', name: 'Rwanda', fifaCode: 'RWA' },\r\n  { isoCode: 'SA', name: 'Saudi Arabia', fifaCode: 'KSA' },\r\n  { isoCode: 'SB', name: 'Solomon Islands', fifaCode: 'SOL' },\r\n  { isoCode: 'SC', name: 'Seychelles', fifaCode: 'SEY' },\r\n  { isoCode: 'SD', name: 'Sudan', fifaCode: 'SUD' },\r\n  { isoCode: 'SE', name: 'Sweden', fifaCode: 'SWE' },\r\n  { isoCode: 'SG', name: 'Singapore', fifaCode: 'SIN' },\r\n  { isoCode: 'SH', name: 'Saint Helena', fifaCode: 'SHN' },\r\n  { isoCode: 'SI', name: 'Slovenia', fifaCode: 'SVN' },\r\n  { isoCode: 'SJ', name: 'Svalbard and Jan Mayen', fifaCode: 'SJM' },\r\n  { isoCode: 'SK', name: 'Slovakia', fifaCode: 'SVK' },\r\n  { isoCode: 'SL', name: 'Sierra Leone', fifaCode: 'SLE' },\r\n  { isoCode: 'SM', name: 'San Marino', fifaCode: 'SMR' },\r\n  { isoCode: 'SN', name: 'Senegal', fifaCode: 'SEN' },\r\n  { isoCode: 'SO', name: 'Somalia', fifaCode: 'SOM' },\r\n  { isoCode: 'SR', name: 'Suriname', fifaCode: 'SUR' },\r\n  { isoCode: 'SS', name: 'South Sudan', fifaCode: 'SCO' },\r\n  { isoCode: 'ST', name: 'Sao Tome and Principe', fifaCode: 'STP' },\r\n  { isoCode: 'SV', name: 'El Salvador', fifaCode: 'SLV' },\r\n  { isoCode: 'SX', name: 'Sint Maarten', fifaCode: 'SXM' },\r\n  { isoCode: 'SY', name: 'Syrian Arab Republic', fifaCode: 'SYR' },\r\n  { isoCode: 'SZ', name: 'Swaziland', fifaCode: 'SWZ' },\r\n  { isoCode: 'TC', name: 'Turks and Caicos Islands', fifaCode: 'TCA' },\r\n  { isoCode: 'TD', name: 'Chad', fifaCode: 'CHA' },\r\n  { isoCode: 'TF', name: 'French Southern Territories', fifaCode: 'ATF' },\r\n  { isoCode: 'TG', name: 'Togo', fifaCode: 'TGO' },\r\n  { isoCode: 'TH', name: 'Thailand', fifaCode: 'THA' },\r\n  { isoCode: 'TJ', name: 'Tajikistan', fifaCode: 'TJK' },\r\n  { isoCode: 'TK', name: 'Tokelau', fifaCode: 'TKL' },\r\n  { isoCode: 'TM', name: 'Turkmenistan', fifaCode: 'TKM' },\r\n  { isoCode: 'TN', name: 'Tunisia', fifaCode: 'TUN' },\r\n  { isoCode: 'TO', name: 'Tonga', fifaCode: 'TGA' },\r\n  { isoCode: 'TL', name: 'East Timor', fifaCode: 'TLS' },\r\n  { isoCode: 'TR', name: 'Turkey', fifaCode: 'TUR' },\r\n  { isoCode: 'TT', name: 'Trinidad and Tobago', fifaCode: 'TRI' },\r\n  { isoCode: 'TV', name: 'Tuvalu', fifaCode: 'TUV' },\r\n  { isoCode: 'TW', name: 'Taiwan, Province of China', fifaCode: 'TPE' },\r\n  { isoCode: 'TZ', name: 'Tanzania, United Republic of', fifaCode: 'TAN' },\r\n  { isoCode: 'UA', name: 'Ukraine', fifaCode: 'UKR' },\r\n  { isoCode: 'UG', name: 'Uganda', fifaCode: 'UGA' },\r\n  { isoCode: 'UM', name: 'USA Minor Outlying Islands', fifaCode: 'UMI' },\r\n  { isoCode: 'US', name: 'United States', fifaCode: 'USA' },\r\n  { isoCode: 'UY', name: 'Uruguay', fifaCode: 'URU' },\r\n  { isoCode: 'UZ', name: 'Uzbekistan', fifaCode: 'UZB' },\r\n  { isoCode: 'VA', name: 'Vatican City State', fifaCode: 'VAT' },\r\n  { isoCode: 'VC', name: 'St Vincent and the Grenadines', fifaCode: 'VIN' },\r\n  { isoCode: 'VE', name: 'Venezuela', fifaCode: 'VEN' },\r\n  { isoCode: 'VG', name: 'Virgin Islands, British', fifaCode: 'VGB' },\r\n  { isoCode: 'VI', name: 'Virgin Islands, U.S.', fifaCode: 'VIR' },\r\n  { isoCode: 'VN', name: 'Viet Nam', fifaCode: 'VIE' },\r\n  { isoCode: 'VU', name: 'Vanuatu', fifaCode: 'VAN' },\r\n  { isoCode: 'WF', name: 'Wallis and Futuna', fifaCode: 'WLF' },\r\n  { isoCode: 'WS', name: 'Samoa', fifaCode: 'SAM' },\r\n  { isoCode: 'YE', name: 'Yemen', fifaCode: 'YEM' },\r\n  { isoCode: 'YT', name: 'Mayotte', fifaCode: 'MYT' },\r\n  { isoCode: 'ZA', name: 'South Africa', fifaCode: 'RSA' },\r\n  { isoCode: 'ZM', name: 'Zambia', fifaCode: 'ZAM' },\r\n  { isoCode: 'ZW', name: 'Zimbabwe', fifaCode: 'ZIM' },\r\n];\r\n","export type Sponsor = {\r\n  code: string;\r\n  language?: string;\r\n  colour: string;\r\n  competitionId: string;\r\n  image: string;\r\n  introText: {\r\n    translations: { [key: string]: string };\r\n  };\r\n  links: { [key: string]: string };\r\n  mainSponsor: string;\r\n  name: string;\r\n  secondaryColour: string;\r\n  tags: string[];\r\n  type: string;\r\n};\r\nexport type Competition = {\r\n  code: string;\r\n  id: string;\r\n  images: { FULL_LOGO: string };\r\n  translations: { name: { EN: string } };\r\n};\r\n/**\r\n * super simple hashing function\r\n */\r\nexport const hashCode = (input: string) => {\r\n  var hash = 0;\r\n  for (var i = 0; i < input.length; i++) {\r\n    var char = input.charCodeAt(i);\r\n    hash = (hash << 5) - hash + char;\r\n    // Convert to 32bit integer\r\n    hash = hash & hash;\r\n  }\r\n  return hash;\r\n};\r\n\r\nexport function compareValues<T>(key: string, order = 'ASC') {\r\n  return function innerSort(a: T, b: T) {\r\n    if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n      // property doesn't exist on either object\r\n      return 0;\r\n    }\r\n\r\n    const varA = typeof a[key] === 'string' ? a[key].toUpperCase() : a[key];\r\n    const varB = typeof b[key] === 'string' ? b[key].toUpperCase() : b[key];\r\n\r\n    let comparison = 0;\r\n    if (varA > varB) {\r\n      comparison = 1;\r\n    } else if (varA < varB) {\r\n      comparison = -1;\r\n    }\r\n    return order === 'DESC' ? comparison * -1 : comparison;\r\n  };\r\n}\r\n/**\r\n * fetch competitions for compDropdown\r\n */\r\nexport const fetchComps = async () => {\r\n  const comps = window.localStorage.getItem('compList');\r\n  if (!comps) {\r\n    const fetchComps = await fetch('https://comp.uefa.com/v2/competitions?regions=CONTINENTAL&regions=WORLDWIDE')\r\n      .then((resp) => resp.json() as Promise<Competition[]>)\r\n      .then((data) => data);\r\n    console.log(fetchComps);\r\n    window.localStorage.setItem('compList', JSON.stringify(fetchComps));\r\n    return fetchComps;\r\n  }\r\n  return JSON.parse(comps) as Competition[];\r\n};\r\n\r\nexport const makeToast = (titleText: string) => {\r\n  const prevToasts = document.querySelectorAll('pk-toast');\r\n  prevToasts.forEach((pt) => pt.parentNode.removeChild(pt));\r\n\r\n  const pkToast = document.createElement('pk-toast');\r\n  const pkToastItem = document.createElement('pk-toast-item');\r\n  pkToastItem.appearance = 'warning';\r\n  pkToastItem.dismiss = 'mixed';\r\n  pkToastItem.closeButton = true;\r\n  pkToastItem.dismissDelay = 3000;\r\n  const icon = document.createElement('div');\r\n  icon.slot = 'icon';\r\n  const pkicon = document.createElement('pk-icon');\r\n  pkicon.name = 'support-alert';\r\n  pkicon.color = 'support-02';\r\n  icon.appendChild(pkicon);\r\n  const title = document.createElement('div');\r\n  title.slot = 'title';\r\n  title.textContent = titleText;\r\n  pkToastItem.append(icon, title);\r\n  pkToast.append(pkToastItem);\r\n  return pkToast;\r\n};\r\n","import { countryCodes, defaultSelectedCountries } from './data';\r\nimport { compareValues } from './util';\r\n\r\nexport const getCountryCheckboxes = () => {\r\n  const checkboxContainer = document.querySelector('#countryCheckboxes');\r\n  return checkboxContainer.querySelectorAll('pk-checkbox') as NodeListOf<HTMLPkCheckboxElement>;\r\n};\r\n\r\nfunction getCheckedCheckboxes() {\r\n  const checkboxes = getCountryCheckboxes();\r\n  const list: HTMLPkCheckboxElement[] = [];\r\n  checkboxes.forEach((ac) => {\r\n    if (ac.checked) list.push(ac);\r\n  });\r\n  return list;\r\n}\r\n\r\nexport const toggleCheckboxes = async (check: boolean) => {\r\n  if (check) {\r\n    const sidePanel = document.querySelector('pk-side-panel');\r\n    await sidePanel.toggle();\r\n  }\r\n  const checkboxes = getCountryCheckboxes();\r\n  checkboxes.forEach((cb) => (cb.checked = check));\r\n};\r\n\r\nexport const makeCountryAvatars = () => {\r\n  const pkChip = document.querySelector('#pk-codes-chips');\r\n  const checkboxes = getCountryCheckboxes();\r\n  const ch: Node[] = [];\r\n  for (let index = 0; index < checkboxes.length; index++) {\r\n    const ac = checkboxes[index];\r\n    const wrapper = document.createElement('div');\r\n    wrapper.classList.add('icon-wrapper');\r\n    wrapper.dataset.countryValue = ac.value;\r\n    if (!defaultSelectedCountries.includes(ac.value)) wrapper.style.display = 'none';\r\n    const container = document.createElement('div');\r\n    container.classList.add('icon-container', 'pk-flex--column');\r\n    const chip = document.createElement('pk-avatar');\r\n    chip.type = 'image';\r\n    chip.size = 48;\r\n    chip.style.padding = 'var(--pk-spacing-xs2)';\r\n    chip.src = `http://purecatamphetamine.github.io/country-flag-icons/3x2/${ac.value}.svg`;\r\n    chip.title = ac.value;\r\n    const code = document.createElement('span');\r\n    code.textContent = ac.value;\r\n    container.append(chip, code);\r\n    wrapper.appendChild(container);\r\n    ch.push(wrapper);\r\n  }\r\n  pkChip.append(...ch);\r\n};\r\n\r\nconst setupCheckboxEventListeners = () => {\r\n  const checkboxes = getCountryCheckboxes();\r\n  checkboxes.forEach((ck) => {\r\n    ck.addEventListener('checkboxChange', (event: CustomEvent<{ isChecked: boolean }>) => {\r\n      const pkAvatar = document\r\n        .querySelector('#pk-codes-chips')\r\n        .querySelector(`div[data-country-value=\"${(event.target as HTMLPkCheckboxElement).value}\"]`) as HTMLElement;\r\n      pkAvatar.style.display = event.detail.isChecked ? 'block' : 'none';\r\n    });\r\n  });\r\n};\r\n\r\nexport const createCountryCheckboxes = () => {\r\n  const checkboxContainer = document.querySelector('#countryCheckboxes');\r\n  const sortedCc = countryCodes.sort(compareValues('isoCode'));\r\n  sortedCc.forEach((p) => {\r\n    const e = document.createElement('span');\r\n    e.slot = 'suffix';\r\n    const pkCheckbox = document.createElement('pk-checkbox');\r\n    pkCheckbox.name = p.name;\r\n    pkCheckbox.value = p.isoCode;\r\n    if (defaultSelectedCountries.includes(p.isoCode)) pkCheckbox.checked = true;\r\n    const id = document.createElement('pk-identifier');\r\n    // badge\r\n    const prefix = document.createElement('span');\r\n    prefix.setAttribute('slot', 'prefix');\r\n    const badge = document.createElement('pk-badge');\r\n    badge.src = `http://purecatamphetamine.github.io/country-flag-icons/3x2/${p.isoCode}.svg`;\r\n    prefix.appendChild(badge);\r\n    // content slots\r\n    const primary = document.createElement('span');\r\n    primary.setAttribute('slot', 'primary');\r\n    primary.textContent = p.name;\r\n    const secondary = document.createElement('span');\r\n    secondary.setAttribute('slot', 'secondary');\r\n    secondary.textContent = p.isoCode;\r\n    e.appendChild(pkCheckbox);\r\n    // appends\r\n    id.appendChild(prefix);\r\n    id.appendChild(primary);\r\n    id.appendChild(secondary);\r\n    id.appendChild(e);\r\n    checkboxContainer.appendChild(id);\r\n  });\r\n  setupCheckboxEventListeners();\r\n  makeCountryAvatars();\r\n};\r\n\r\n/** inputs section */\r\nexport const updateCustomInput = (event: CustomEvent<{ item: HTMLPkMenuItemElement }>, selectorID: string) => {\r\n  const tE = event.target as HTMLElement;\r\n  for (let i = 0; i < tE.children.length; i += 1) {\r\n    const child = tE.children[i];\r\n    if (child.tagName.toLowerCase() === 'pk-menu-item') tE.children[i].setAttribute('selected', 'false');\r\n  }\r\n\r\n  const targetElement = event.detail.item;\r\n  targetElement.setAttribute('selected', 'true');\r\n  const itemValue = targetElement.getAttribute('value');\r\n  if (itemValue) {\r\n    const baseUrl = document.querySelector(selectorID);\r\n    baseUrl.setAttribute('pk-value', itemValue);\r\n    const textSection = baseUrl.querySelector(`${selectorID}Selection`);\r\n    textSection.textContent = targetElement.getAttribute('printValue');\r\n  }\r\n};\r\n\r\nexport const extractInputData = () => {\r\n  //get values from inputs\r\n  const inputValue = document.querySelector<HTMLInputElement>('#competitionId').getAttribute('pk-value');\r\n  const inputCountryCodes = getCheckedCheckboxes().map((p) => p.value);\r\n  const baseUrl = document.querySelector<HTMLInputElement>('#baseUrl').getAttribute('pk-value');\r\n  const competitionIdArray = [inputValue].filter(Boolean);\r\n\r\n  const countryCodesArray = inputCountryCodes.map((cc) => cc.trim().toUpperCase()).filter(Boolean);\r\n  return {\r\n    cupArray: competitionIdArray,\r\n    countries: countryCodesArray,\r\n    url: baseUrl,\r\n  };\r\n};\r\n","import { compareValues, Sponsor } from './util';\r\n\r\nconst makePkCells = (columnKey: string, appendItems: Node[]) => {\r\n  const newItem = document.createElement('pk-table-cell');\r\n  newItem.setAttribute('column-key', columnKey);\r\n  newItem.withDivider = true;\r\n  newItem.classList.add('pk-text--wrap', 'pk-text--break');\r\n  newItem.style.setProperty('--pk-cell--justify-content', 'space-evenly');\r\n  appendItems.forEach((ap) => newItem.appendChild(ap));\r\n  if (appendItems.length > 1) newItem.classList.add('pk-flex--column');\r\n  return newItem;\r\n};\r\n\r\nconst makePkCell = (columnKey: string, appendItem: Node) => makePkCells(columnKey, [appendItem]);\r\n\r\nconst createPkIdentifier = (propValue: string, bgColor = 'white', color = 'black', columnKey?: string) => {\r\n  const pkIdentifier = document.createElement('pk-identifier');\r\n  const pkId = document.createElement('span');\r\n  pkId.setAttribute('slot', 'primary');\r\n  pkId.classList.add('pk-text--wrap', 'pk-text--break');\r\n  pkId.textContent = propValue;\r\n  pkIdentifier.appendChild(pkId);\r\n  if (columnKey) {\r\n    const pkSec = document.createElement('span');\r\n    pkSec.setAttribute('slot', 'secondary');\r\n    pkSec.textContent = columnKey;\r\n    pkIdentifier.primarySize = '24';\r\n    pkIdentifier.appendChild(document.createElement('pk-divider'));\r\n    pkIdentifier.appendChild(pkSec);\r\n  }\r\n  pkIdentifier.alignment = 'center';\r\n  pkIdentifier.style.setProperty('--pk-identifier-primary--color', color);\r\n  pkIdentifier.style.setProperty('--pk-identifier--bg-color', bgColor);\r\n  return pkIdentifier;\r\n};\r\n\r\n/*\r\nprint column from values\r\n*/\r\nexport const printColumn = (\r\n  newRow: HTMLElement,\r\n  propValue: string,\r\n  columnKey: string,\r\n  bgColor = 'white',\r\n  color = 'black',\r\n) => {\r\n  const pkIdentifier = createPkIdentifier(propValue, bgColor, color);\r\n  newRow.appendChild(makePkCell(columnKey, pkIdentifier));\r\n};\r\nexport const printColumnItems = (newRow: HTMLElement, columnKey: string, pkIdentifiers: HTMLPkIdentifierElement[]) => {\r\n  newRow.appendChild(makePkCells(columnKey, pkIdentifiers));\r\n};\r\n/**\r\n * print column from list of values\r\n */\r\nexport const printColumnList = (\r\n  newRow: HTMLElement,\r\n  columnKey: string,\r\n  propObj: { [key: string]: string },\r\n  addCopyButton?: boolean,\r\n) => {\r\n  const ul = document.createElement('pk-data-card');\r\n  ul.style.width = 'fit-content';\r\n  const header = document.createElement('div');\r\n  header.setAttribute('slot', 'body');\r\n  for (const key in propObj) {\r\n    const li = document.createElement('pk-list-item');\r\n    li.setAttribute('has-divider', 'true');\r\n    const pkIdentifier = document.createElement('pk-identifier');\r\n    pkIdentifier.style.setProperty('--pk-identifier-primary--color', 'black');\r\n    pkIdentifier.style.setProperty('--pk-identifier--bg-color', 'white');\r\n\r\n    const prefix = document.createElement('span');\r\n    prefix.setAttribute('slot', 'prefix');\r\n    prefix.textContent = key;\r\n    const pkId = document.createElement('span');\r\n    pkId.setAttribute('slot', 'primary');\r\n    pkId.textContent = propObj[key];\r\n    pkIdentifier.appendChild(prefix);\r\n    pkIdentifier.appendChild(pkId);\r\n    if (addCopyButton) {\r\n      const suffix = document.createElement('span');\r\n      suffix.classList.add('clickable-identifiers');\r\n      suffix.slot = 'suffix';\r\n      const icon = document.createElement('pk-icon');\r\n      icon.name = 'actions-copy';\r\n      suffix.appendChild(icon);\r\n      suffix.addEventListener('click', () => navigator.clipboard.writeText(propObj[key]));\r\n      pkIdentifier.appendChild(suffix);\r\n    }\r\n    li.appendChild(pkIdentifier);\r\n    header.appendChild(li);\r\n  }\r\n  ul.appendChild(header);\r\n  newRow.appendChild(newRow.tagName === 'PK-TABLE-ROW' ? makePkCell(columnKey, ul) : ul);\r\n};\r\n\r\n/**\r\n * map sponsor to a PkTableRowItem\r\n * @param sponsor\r\n * @returns\r\n */\r\nexport const mapSponsor = (sponsor: Sponsor) => {\r\n  const newRow = document.createElement('pk-table-row');\r\n  newRow.id = sponsor.code;\r\n\r\n  // Insert a cell at the end of the row\r\n  printColumn(newRow, sponsor.language, 'language');\r\n  printColumnItems(newRow, 'info', [\r\n    createPkIdentifier(sponsor.mainSponsor, '', '', 'mainSponsor'),\r\n    createPkIdentifier(sponsor.code, '', '', 'code'),\r\n    createPkIdentifier(sponsor.name, '', '', 'name'),\r\n    createPkIdentifier(sponsor.type, '', '', 'type'),\r\n  ]);\r\n  printColumnItems(newRow, 'colors', [\r\n    createPkIdentifier(sponsor.colour, sponsor.colour, sponsor.secondaryColour, 'main'),\r\n    createPkIdentifier(sponsor.secondaryColour, sponsor.secondaryColour, sponsor.colour, 'secondary'),\r\n  ]);\r\n\r\n  // image cell\r\n  var img = document.createElement('img');\r\n  img.src = sponsor.image;\r\n  const lastNode = newRow.children.item(newRow.children.length - 1);\r\n  lastNode.appendChild(img);\r\n\r\n  const btn = document.createElement('pk-button');\r\n  btn.classList.remove('adaptive-width');\r\n  btn.textContent = 'Open links';\r\n  btn.addEventListener('click', () => {\r\n    const e = document.querySelector<HTMLElement>('#urls-showing');\r\n    e.innerHTML = '';\r\n    printColumnList(e, 'links', sponsor.links, true);\r\n    const e2 = document.querySelector('pk-overlay');\r\n    e2.isOpen = true;\r\n  });\r\n  const urlsCell = makePkCell('links', btn);\r\n  newRow.appendChild(urlsCell);\r\n\r\n  printColumnList(newRow, 'introText', sponsor.introText.translations);\r\n  const tagItems = sponsor.tags.reduce((now, tg, i) => Object.assign(now, { [i]: tg }), {});\r\n  printColumnList(newRow, 'tags', tagItems);\r\n\r\n  return newRow;\r\n};\r\n\r\n/**\r\n * generate PkTableBody from array of sponsors\r\n * @param sponsors\r\n */\r\nexport const generateTableBody = (sponsors: Sponsor[]) => {\r\n  const tbodyRef = document.getElementById('sponsor-table').getElementsByTagName('pk-table-body')[0];\r\n  //cleanup old table\r\n  tbodyRef.innerHTML = '';\r\n  const hideEmpty = sponsors.length ? 'none' : 'block';\r\n  document.querySelector<HTMLElement>('#noContentFound').style.display = hideEmpty;\r\n  sponsors.forEach((sp) => tbodyRef.appendChild(mapSponsor(sp)));\r\n};\r\n\r\n/**\r\n * sort PkTableBody\r\n * @param event\r\n * @param items\r\n */\r\nexport const sortTableBy = (columnKey: string, order: string, items: { [key: string]: Sponsor }) => {\r\n  const tableElement = document.querySelector<HTMLElement>('pk-table');\r\n  const tableBodyElement = tableElement.querySelector<HTMLElement>('pk-table-body');\r\n  tableBodyElement.style.height = `${tableBodyElement.offsetHeight}px`;\r\n  const sortSponsors = Object.values(items).sort(compareValues(columnKey, order));\r\n  generateTableBody(sortSponsors);\r\n};\r\n","import {\r\n  createCountryCheckboxes,\r\n  extractInputData,\r\n  makeCountryAvatars,\r\n  toggleCheckboxes,\r\n  updateCustomInput,\r\n} from './selectorsUtil';\r\nimport { generateTableBody, sortTableBy } from './tableUtil';\r\nimport { fetchComps, hashCode, makeToast, Sponsor } from './util';\r\n\r\nconst arrayResponseHashes: { [key: string]: Sponsor } = {};\r\n\r\nconst clearPreviousHashedItems = () => Object.keys(arrayResponseHashes).forEach((k) => delete arrayResponseHashes[k]);\r\n\r\nconst extractSponsorItems = (sponsors: Sponsor[], countryCode: string) => {\r\n  sponsors.forEach((sponsor: Sponsor) => {\r\n    // check if hash is in the array, otherwise add a new sponsor\r\n    const respHash = hashCode(JSON.stringify(sponsor));\r\n    if (!arrayResponseHashes[respHash]) {\r\n      sponsor.language = countryCode;\r\n      arrayResponseHashes[respHash] = sponsor;\r\n    } else {\r\n      // I find the existing sponsor and I add the language to the codes\r\n      const existingRow = arrayResponseHashes[respHash];\r\n      existingRow.language += `, ${countryCode}`;\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * onclick button handler\r\n */\r\nconst getCompetitionData = () => {\r\n  const { cupArray: cups, countries, url: baseEndpoint } = extractInputData();\r\n  if (!cups.length || !countries.length || !baseEndpoint) {\r\n    let text = 'You miss: ';\r\n    if (!baseEndpoint) text += 'the endpoint to use - ';\r\n    if (!cups.length) text += 'the desidered cup - ';\r\n    if (!countries.length) text += 'a min. of 1 country - ';\r\n\r\n    const sendToast = document.querySelector('#pk-codes-chips');\r\n    sendToast.appendChild(makeToast(text.substring(0, text.length - 2)));\r\n    return;\r\n  }\r\n\r\n  const apiCalls = [];\r\n  clearPreviousHashedItems();\r\n  const table = document.querySelector<HTMLPkTableElement>('#sponsor-table');\r\n  table.loading = true;\r\n  //loop through comp and countries\r\n  cups.forEach((competitionId) => {\r\n    countries.forEach((countryCode) => {\r\n      const url = baseEndpoint.replace('{competition}', competitionId).replace('{countryCode}', countryCode);\r\n\r\n      const apiCall = fetch(url)\r\n        .then((response) => response.json() as Promise<Sponsor[]>)\r\n        .then((sponsors) => {\r\n          extractSponsorItems(sponsors, countryCode);\r\n        });\r\n      apiCalls.push(apiCall);\r\n    });\r\n  });\r\n  // as soon as all the api calls are done...\r\n  Promise.all(apiCalls).then(() => {\r\n    console.info(`all your urls are belong to us`);\r\n    sortTableBy('mainSponsor', 'ASC', arrayResponseHashes);\r\n    table.loading = false;\r\n  });\r\n};\r\n\r\n/** listeners setup section */\r\nconst dropdownSelectors = ['#baseUrl', '#competitionId'];\r\ndropdownSelectors.forEach((selector) => {\r\n  document\r\n    .querySelector(selector)\r\n    .querySelector('pk-menu')\r\n    .addEventListener('pkSelect', (event: CustomEvent<{ item: HTMLPkMenuItemElement }>) =>\r\n      updateCustomInput(event, selector),\r\n    );\r\n});\r\n\r\ncreateCountryCheckboxes();\r\ndocument.querySelector('#select-all-checkboxes').addEventListener('click', () => toggleCheckboxes(true));\r\ndocument.querySelector('#clear-all-checkboxes').addEventListener('click', () => toggleCheckboxes(false));\r\n\r\ndocument.getElementById('get-competition-button').addEventListener('click', getCompetitionData);\r\ndocument.addEventListener('pkTableSortBy', (ev: CustomEvent) =>\r\n  sortTableBy(ev.detail.columnKey, ev.detail.order, arrayResponseHashes),\r\n);\r\n\r\n/**\r\n * first load setup\r\n */\r\n(async () => {\r\n  const comps = await fetchComps();\r\n  const dpComps = document.querySelector<HTMLElement>('#competitionId').querySelector<HTMLPkMenuElement>('pk-menu');\r\n  comps\r\n    .sort((c, c1) => (Number.parseInt(c.id, 10) > Number.parseInt(c1.id, 10) ? 1 : -1))\r\n    .forEach((cp) => {\r\n      const menuItem = document.createElement('pk-menu-item');\r\n      menuItem.value = cp.id;\r\n      menuItem.setAttribute('printValue', `${cp.id}: ${cp.code}`);\r\n      menuItem.textContent = `${cp.id}: ${cp.translations.name.EN}`;\r\n      dpComps.appendChild(menuItem);\r\n    });\r\n})();\r\n"],"names":["$9a8cebc34540b0c1$export$5a0959b716beef1","$9a8cebc34540b0c1$export$7bc41e2d36612b98","isoCode","name","fifaCode","$9fd44832378de894$export$6ab1df3197f7c641","key","order","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison","$4c2cb61db2559199$export$930d331b59706944","document","querySelector","querySelectorAll","$4c2cb61db2559199$export$f5c6543a3807a093","async","check","sidePanel","toggle","forEach","cb","checked","$4c2cb61db2559199$export$98d663e87a27ca13","inputValue","getAttribute","inputCountryCodes","checkboxes","list","ac","push","$4c2cb61db2559199$var$getCheckedCheckboxes","map","p","value","baseUrl","cupArray","filter","Boolean","countries","cc","trim","url","$fedfec13e4cc623e$var$makePkCells","columnKey","appendItems","newItem","createElement","setAttribute","withDivider","classList","add","style","setProperty","ap","appendChild","length","$fedfec13e4cc623e$var$makePkCell","appendItem","$fedfec13e4cc623e$var$createPkIdentifier","propValue","bgColor","color","pkIdentifier","pkId","textContent","pkSec","primarySize","alignment","$fedfec13e4cc623e$export$32d064839f7f18da","newRow","pkIdentifiers","$fedfec13e4cc623e$export$db090a681ed76ec9","propObj","addCopyButton","ul","width","header","li","prefix","suffix","slot","icon","addEventListener","navigator","clipboard","writeText","tagName","$fedfec13e4cc623e$export$61654e3859dce6e2","sponsor","id","code","$fedfec13e4cc623e$export$c9b006afce059d98","language","mainSponsor","type","colour","secondaryColour","img","src","image","children","item","btn","remove","e","innerHTML","links","isOpen","urlsCell","introText","translations","tagItems","tags","reduce","now","tg","i","Object","assign","$fedfec13e4cc623e$export$19eca339421918e3","items","tableBodyElement","height","offsetHeight","sponsors","tbodyRef","getElementById","getElementsByTagName","hideEmpty","display","sp","$fedfec13e4cc623e$export$b2e95bdb7cffb138","values","sort","$ad2bcec7a0192558$var$arrayResponseHashes","selector","event","selectorID","tE","target","toLowerCase","targetElement","detail","itemValue","$4c2cb61db2559199$export$7911d5cfafc7ef49","checkboxContainer","pkCheckbox","includes","badge","primary","secondary","ck","isChecked","pkChip","ch","index","wrapper","dataset","countryValue","container","chip","size","padding","title","append","$4c2cb61db2559199$export$3610b713aa132eea","cups","baseEndpoint","text","titleText","pt","parentNode","removeChild","pkToast","pkToastItem","appearance","dismiss","closeButton","dismissDelay","pkicon","$9fd44832378de894$export$6779263a4a120d42","substring","apiCalls","keys","k","table","loading","competitionId","countryCode","replace","apiCall","fetch","then","response","json","respHash","input","hash","charCodeAt","$9fd44832378de894$export$d41d9ab3de2def3d","JSON","stringify","$ad2bcec7a0192558$var$extractSponsorItems","all","console","info","ev","comps","window","localStorage","getItem","$9fd44832378de894$export$902a0d3aad41968","resp","data","log","setItem","parse","dpComps","c","c1","Number","parseInt","cp","menuItem"],"version":3,"file":"index.c87218b3.js.map"}